# 2. 1로 만들기 (대표적인 DP 문제)
# 정수 X가 주어질 때, 사용 가능한 연산이 아래 4가지라고 한다. 
# 연산을 적절히 사용하여 1을 만들고자 할 때, 연산 횟수의 최소값을 출력하라.
# 연산 4가지: n의 배수이면 n으로 나눔 (n = 2, 3, 5), x - 1

x = int(input())

# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
d = [0] * 30001             # 정수 x의 최대값이 30000임

# 다이나믹 프로그래밍(DP) 진행 (Bottom-Up)
for i in range(2, x + 1):
    # 연산 1. 현재 수에서 1을 빼는 경우
    d[i] = d[i - 1] + 1

    # 연산 2. 현재 수가 2로 나누어 떨어지는 경우
    if i % 2 == 0:
        d[i] = min(d[i], d[i // 2] + 1)
    
    # 연산 3. 현재 수가 3로 나누어 떨어지는 경우
    if i % 3 == 0:
        d[i] = min(d[i], d[i // 3] + 1)

    # 연산 4. 현재 수가 5로 나누어 떨어지는 경우
    if i % 5 == 0:
        d[i] = min(d[i], d[i // 5] + 1)

print(d[x])